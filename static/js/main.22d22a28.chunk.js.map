{"version":3,"sources":["components/Jumbotron.js","components/Navbar.js","components/Footer.js","components/Images.js","components/Main.js","App.js","index.js"],"names":["Jumbotron","className","Navbar","props","currentScore","topScore","Footer","href","canidates","map","canidate","key","name","src","source","alt","onClick","handleIncrement","chosenArray","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","Main","state","event","preventDefault","chosen","target","getAttribute","includes","setState","push","this","Images","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"+LAaeA,MAXf,WACI,OACI,yBAAKC,UAAU,oCACX,yBAAKA,UAAU,aACf,wBAAIA,UAAU,aAAd,uBACA,uBAAGA,UAAU,QAAb,8ECKGC,MAVf,SAAgBC,GACZ,OACI,yBAAKF,UAAU,+CACX,0BAAMA,UAAU,wBAAhB,eACA,0BAAMA,UAAU,wBAAhB,4BACA,0BAAMA,UAAU,wBAAhB,UAA+CE,EAAMC,aAArD,iBAAiFD,EAAME,YCKpFC,MAVf,WACI,OACI,4BAAQL,UAAU,6CACd,yBAAKA,UAAU,qCAAf,eACI,uBAAGA,UAAU,cAAcM,KAAK,+CAAhC,kBCUDL,MAdf,SAAgBC,GACZ,OACI,yBAAKF,UAAU,aACX,yBAAKA,UAAU,OACVE,EAAMK,UAAUC,KAAI,SAAAC,GAAQ,OACzB,yBAAKT,UAAU,+BAA+BU,IAAKD,EAASE,MACxD,yBAAKC,IAAKH,EAASI,OAAQb,UAAU,iBAAiBc,IAAKL,EAASE,KAAMI,QAASb,EAAMc,yBCF7GT,EAAY,CACZ,CACEI,KAAM,QACNE,OAAQ,gBAEV,CACEF,KAAM,SACNE,OAAQ,iBAEV,CACEF,KAAM,UACNE,OAAQ,kBAEV,CACEF,KAAM,YACNE,OAAQ,oBAEV,CACEF,KAAM,SACNE,OAAQ,iBAEV,CACEF,KAAM,UACNE,OAAQ,kBAEV,CACEF,KAAM,SACNE,OAAQ,iBAEV,CACEF,KAAM,WACNE,OAAQ,mBAEV,CACEF,KAAM,UACNE,OAAQ,kBAEV,CACEF,KAAM,SACNE,OAAQ,iBAEV,CACEF,KAAM,SACNE,OAAQ,iBAEV,CACEF,KAAM,OACNE,OAAQ,gBAIVI,EAAc,GAEdC,EAAU,SAAAC,GAIV,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAGlB,IAAMD,GAGXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,GAiDIQ,E,2MA5CXC,MAAQ,CACJzB,aAAc,EACdI,YACAH,SAAU,G,EAIdY,gBAAkB,SAACa,GACfA,EAAMC,iBACN,IAAIC,EAASF,EAAMG,OAAOC,aAAa,OACnChB,EAAYiB,SAASH,IACrB,EAAKI,SAAS,CAAEhC,aAAc,IAC9Bc,EAAa,KAEb,EAAKkB,SAAS,CAAEhC,aAAc,EAAKyB,MAAMzB,aAAe,IACpD,EAAKyB,MAAMzB,cAAgB,EAAKyB,MAAMxB,UACtC,EAAK+B,SAAS,CAAE/B,SAAU,EAAKwB,MAAMzB,aAAe,IAExDc,EAAYmB,KAAKL,IAErB,EAAKI,SAAS,CAAE5B,UAAWW,EAAQ,EAAKU,MAAMrB,c,wEAO9C,OACI,6BACI,kBAAC,EAAD,CACIJ,aAAgBkC,KAAKT,MAAMzB,aAC3BC,SAAYiC,KAAKT,MAAMxB,WAE3B,kBAAC,EAAD,MACA,kBAACkC,EAAD,CACE/B,UAAa8B,KAAKT,MAAMrB,UACxBS,gBAAmBqB,KAAKrB,kBAE1B,kBAAC,EAAD,W,GAxCGuB,IAAMC,WCnEVC,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCFNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.22d22a28.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbotron() {\n    return (\n        <div className=\"jumbotron jumbotron-fluid shadow\">\n            <div className=\"container\">\n            <h1 className=\"display-4\">Meet the Canidates!</h1>\n            <p className=\"lead\">Click on an face to earn points, but don't click on any more than once!</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Jumbotron;","import React from \"react\";\n\nfunction Navbar(props) {\n    return (\n        <nav className=\"navbar navbar-dark bg-info shadow fixed-top\">\n            <span className=\"navbar-brand mb-0 h1\">Clicky Game</span>\n            <span className=\"navbar-brand mb-0 h1\">Click an Image to Begin!</span>\n            <span className=\"navbar-brand mb-0 h1\">Score: {props.currentScore} | Top Score: {props.topScore}</span>\n        </nav>\n    );\n};\n\nexport default Navbar;","import React from \"react\";\n\nfunction Footer() {\n    return (\n        <footer className=\"page-footer font-small text-light bg-dark\">\n            <div className=\"footer-copyright text-center py-3\">Github Repo:\n                <a className=\"text-danger\" href=\"https://github.com/jeff-swanner/clicky-game\"> Click Here</a>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nfunction Navbar(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                {props.canidates.map(canidate => (\n                    <div className=\"col-lg-3 col-md-4 col-6 zoom\" key={canidate.name}>\n                        <img src={canidate.source} className=\"img-fluid  p-1\" alt={canidate.name} onClick={props.handleIncrement}></img>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Navbar;","import React from \"react\";\nimport Jumbotron from \"./Jumbotron\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport Images from \"./Images\";\n\nvar canidates = [\n    {\n      name: \"biden\",\n      source: \"./biden.jpeg\"\n    },\n    {\n      name: \"booker\",\n      source: \"./booker.jpeg\"\n    },\n    {\n      name: \"bullock\",\n      source: \"./bullock.jpeg\"\n    },\n    {\n      name: \"buttigieg\",\n      source: \"./buttigieg.jpeg\"\n    },\n    {\n      name: \"castro\",\n      source: \"./castro.jpeg\"\n    },\n    {\n      name: \"delaney\",\n      source: \"./delaney.jpeg\"\n    },\n    {\n      name: \"harris\",\n      source: \"./harris.jpeg\"\n    },\n    {\n      name: \"o-rourke\",\n      source: \"./o-rourke.jpeg\"\n    },\n    {\n      name: \"sanders\",\n      source: \"./sanders.jpeg\"\n    },\n    {\n      name: \"steyer\",\n      source: \"./steyer.jpeg\"\n    },\n    {\n      name: \"warren\",\n      source: \"./warren.jpeg\"\n    },\n    {\n      name: \"yang\",\n      source: \"./yang.jpeg\"\n    }\n]\n\nvar chosenArray = [];\n\nvar shuffle = array => {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n}\n\nclass Main extends React.Component {\n    // Setting the initial state of the Counter component\n    state = {\n        currentScore: 0,\n        canidates,\n        topScore: 0\n    };\n\n    // handleIncrement increments this.state.count by 1\n    handleIncrement = (event) => {\n        event.preventDefault();\n        let chosen = event.target.getAttribute('alt');\n        if (chosenArray.includes(chosen)){\n            this.setState({ currentScore: 0 });\n            chosenArray =[];\n        } else {\n            this.setState({ currentScore: this.state.currentScore + 1 });\n            if (this.state.currentScore >= this.state.topScore) {\n                this.setState({ topScore: this.state.currentScore + 1 });\n            };\n            chosenArray.push(chosen);\n        };\n        this.setState({ canidates: shuffle(this.state.canidates)});\n        \n        // We always use the setState method to update a component's state\n        \n    };\n\n    render() {\n        return (\n            <div>\n                <Navbar \n                    currentScore = {this.state.currentScore}\n                    topScore = {this.state.topScore}\n                />\n                <Jumbotron />\n                <Images \n                  canidates = {this.state.canidates}\n                  handleIncrement = {this.handleIncrement}\n                />\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default Main;","import React from \"react\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div>\n      <Main />      \n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}